<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
	<Style x:Key="MetroButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
		<Setter Property="Background" Value="#22a0c3"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="FontSize" Value="13"/>
		<Setter Property="Height" Value="26"/>
		<Setter Property="Width" Value="75"/>
		<Setter Property="Padding" Value="10,5,10,5"/>
		<Setter Property="BorderBrush" Value="#FF73C2D8"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
                    <!-- We use Grid as a root because it is easy to add more elements to customize the button -->
					<Grid x:Name="Grid" Width="Auto">
						<Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}"/>

						<!-- Content Presenter is where the text content etc is placed by the control -->
						<!-- The bindings are useful so that the control can be parameterized without editing the template -->
						<ContentPresenter RecognizesAccessKey="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
					</Grid>

					<!--Each state sets a brush on the Border in the template -->
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" Value="White" TargetName="Border"/>
							<Setter Property="BorderBrush" Value="LightGray" TargetName="Border"/>
							<Setter Property="Foreground" Value="#22a0c3"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" Value="Transparent"/>
							<Setter Property="BorderBrush" Value="LightGray" TargetName="Border"/>
							<Setter Property="Foreground" Value="LightGray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>